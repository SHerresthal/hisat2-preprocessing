import yaml

include: "/scripts/snakemake-scripts.py"

configfile: "/config/config.yml"
config = parse_config(config)

fastqdir = "/fastq"

# "/meta/hisat2"
indexdir = str(Path(config['metadir'])/"hisat2")
# "/meta/genome.fasta"
fastafile = str(Path(config['metadir'])/config['fasta'])
# "genome"
indexname = str(Path(config['fasta']).stem)
# "/meta/hisat2/genome"
indexstem = str(Path(indexdir)/indexname)

samples = get_samples(fastqdir)

indexfiles = expand(
    indexstem+".{i}.ht2",
    i=range(1,9))


rule all:
    input:
        "config.yml",
        indexfiles,
        expand("mapped/{sample}.bam", sample=samples.keys())


# writes the updated config file to the output directory
rule storeconfig:
    output:
        "config.yml"
    run:
        with open(output[0],"w") as f:
            yaml.dump(config, f, default_flow_style=False)


rule clean:
    shell:
        "rm -rf /output/*"


# create a hisat2 index
rule hisat2index:
    input:
        fastafile
    output:
        indexfiles
    log:
        "logs/hisat2-index.log"
    shell:
        "cd " + indexdir + " && "
        "hisat2-build {input} " + indexname


rule hisat2:
    input:
        reads=[
            "merged/{sample}_R1.fastq",
            "merged/{sample}_R2.fastq"],
    output:
        "mapped/{sample}.bam"
    log:
        "logs/hisat2/{sample}.log"
    params:
        idx=indexstem,
        extra="--min-intronlen 1000"
    threads: 8
    wrapper:
        "0.27.1/bio/hisat2"


rule merge:
    input:
        lambda wildcards: samples[wildcards.sample][wildcards.read]
    output:
        "merged/{sample}_R{read}.fastq"
    log:
        "logs/merging/{sample}_R{read}_merge.log"
    shell:
        """
        echo {input} | tr ' ' '\n' > {log};
        zcat {input} > {output}"""
